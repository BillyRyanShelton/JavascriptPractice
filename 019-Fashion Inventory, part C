function listAllBlackShoes(list) {
  var blackShoes = '';
  list.forEach(function(designerObj) {
    designerObj.shoes.forEach(function(shoeObj) {
      if(shoeObj.name.includes('black')) {
        blackShoes = nameShoePrice(blackShoes, designerObj, shoeObj);
      }});
    }); blackShoes = blackShoes.slice(0,-1);
    return blackShoes;
};

function nameShoePrice(blackShoes, designerObj, shoeObj) {
  blackShoes += designerObj.name + ',';
  blackShoes += shoeObj.name + ',';
  blackShoes += shoeObj.price + '\n';
  return blackShoes;
};

function assertObjectsEqual(actual, expected, testName) {
  if(JSON.stringify(actual)===JSON.stringify(expected)) {
    console.log('passed');
  } else {
    console.log('FAILED [' + testName + '] Expected ' + JSON.stringify(expected) + ', but got ' + JSON.stringify(actual));
  }
}

function testAllBlackShoes() {
  var currentInventory = [
    {
      name: 'Brunello Cucinelli',
      shoes: [
        {name: 'tasselled black low-top lace-up', price: 1000},
        {name: 'tasselled green low-top lace-up', price: 1500},
        {name: 'plain beige suede moccasin', price: 1200}
      ]
    },
    {
      name: 'Gucci',
      shoes: [
        {name: 'red leather laced sneakers', price: 800},
        {name: 'black leather laced sneakers', price: 900}
      ]
    }
  ];

assertObjectsEqual(listAllBlackShoes(currentInventory), ('Brunello Cucinelli,tasselled black low-top lace-up,1000\n'+'Gucci,black leather laced sneakers,900'), 'should return designer,name and price for only black shoes');
}

testAllBlackShoes();
