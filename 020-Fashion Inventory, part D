function findAllLacedShoes(fashionInventory) {
  shoeList = [];
  fashionInventory.forEach(function(designerObj) {
    designerObj.shoes.forEach(function(shoe) {
      if(shoe.name.includes('lace')) {
        shoeList.push(makeLaceObj(shoe.name));
      }
    });
  }); return shoeList;
};


function makeLaceObj(shoename){
  var laceObj = {};
  laceObj.nameWords = shoename.split(' ');
  laceObj.nameWords.forEach(function(element, index) {
    if(element.includes('lace')) {
      laceObj.targetWordIndex = index;
    }
  }); return laceObj; 
};


function assertObjectsEqual(actual, expected, testName) {
  if(JSON.stringify(actual)===JSON.stringify(expected)) {
    console.log('passed');
  } else {
    console.log('FAILED [' + testName + '] Expected ' + JSON.stringify(expected) + ', but got ' + JSON.stringify(actual));
  }
}


function testFindLacedShoes(){
  var actual = [
  {
    name: 'Brunello Cucinelli',
    shoes: [
      {name: 'tasselled black low-top lace-up', price: 1000},
      {name: 'tasselled green low-top lace-up', price: 1100},
      {name: 'plain beige suede moccasin', price: 950},
      {name: 'plain olive suede moccasin', price: 1050}
    ]
  },
  {
    name: 'Gucci',
    shoes: [
      {name: 'red leather laced sneakers', price: 800},
      {name: 'black leather laced sneakers', price: 900}
    ]
  }
];
  
  var expected = [
  {
    "nameWords": [
      "tasselled",
      "black",
      "low-top",
      "lace-up"
    ],
    "targetWordIndex": 3
  },
  {
    "nameWords": [
      "tasselled",
      "green",
      "low-top",
      "lace-up"
    ],
    "targetWordIndex": 3
  },
  {
    "nameWords": [
      "red",
      "leather",
      "laced",
      "sneakers"
    ],
    "targetWordIndex": 2
  },
  {
    "nameWords": [
      "black",
      "leather",
      "laced",
      "sneakers"
    ],
    "targetWordIndex": 2
  }
]
  assertObjectsEqual(findAllLacedShoes(actual), expected, 'should list all shoes with the name lace and position of keyword');
}

testFindLacedShoes();
